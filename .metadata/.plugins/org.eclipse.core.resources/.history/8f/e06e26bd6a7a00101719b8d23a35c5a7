package selenium;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import io.github.bonigarcia.wdm.WebDriverManager;

import java.time.Duration;
import java.util.List;

public class Lab6 {

	public static void main(String[] args) throws InterruptedException {
		// Setup ChromeDriver
        WebDriverManager.chromedriver().setup();
        WebDriver driver = new ChromeDriver();
        driver.manage().window().maximize();

        // Explicit Wait
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(15));

        try {
            // Step 1: Open Amazon
            driver.get("https://www.amazon.in/");

            // Step 2: Search for "Mobile"
            WebElement searchBox = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("twotabsearchtextbox")));
            searchBox.sendKeys("Mobile");
            driver.findElement(By.id("nav-search-submit-button")).click();

            // Step 3: Get list of products and click the first one
            List<WebElement> products = wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(
                    By.xpath("//h2//a")
            ));

            if (!products.isEmpty()) {
                String productName = products.get(0).getText();
                System.out.println("First product found: " + productName);
                products.get(0).click();

                // Switch to new tab (Amazon opens product in new tab)
                for (String winHandle : driver.getWindowHandles()) {
                    driver.switchTo().window(winHandle);
                }

                // Step 4: Change Qty to 3 (if available)
                try {
                    WebElement qtyDropdown = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("quantity")));
                    Select qtySelect = new Select(qtyDropdown);
                    qtySelect.selectByValue("3");
                    System.out.println("‚úÖ Quantity changed to 3");
                } catch (Exception e) {
                    System.out.println("‚ö†Ô∏è Quantity dropdown not available, continuing with default qty=1.");
                }

                // Step 5: Add to Cart
                WebElement addToCartBtn = wait.until(ExpectedConditions.elementToBeClickable(By.id("add-to-cart-button")));
                addToCartBtn.click();
                System.out.println("‚úÖ Clicked 'Add to Cart'");

                // Step 6: Verify item added to cart
                try {
                    WebElement cartMsg = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("sw-gtc")));
                    if (cartMsg.isDisplayed()) {
                        System.out.println("‚úÖ Product added to cart successfully: " + productName);
                    }
                } catch (Exception e) {
                    System.out.println("‚ö†Ô∏è Cart success message not visible, but item may still be added.");
                }

                // Step 7: Go to cart
                WebElement cartBtn = wait.until(ExpectedConditions.elementToBeClickable(By.id("nav-cart")));
                cartBtn.click();

                // Step 8: Verify product in cart
                if (driver.getPageSource().contains(productName)) {
                    System.out.println("‚úÖ Verified product is in cart: " + productName);
                } else {
                    System.out.println("‚ùå Product not found in cart!");
                }

                // Step 9: Proceed to checkout (will ask for login)
                try {
                    WebElement checkoutBtn = wait.until(ExpectedConditions.elementToBeClickable(By.name("proceedToRetailCheckout")));
                    checkoutBtn.click();
                    System.out.println("üëâ Checkout page opened (Login required).");
                } catch (Exception e) {
                    System.out.println("‚ö†Ô∏è Checkout button not available, maybe need login first.");
                }

                // Step 10: Logout (only if logged in)
                try {
                    WebElement accountList = wait.until(ExpectedConditions.elementToBeClickable(By.id("nav-link-accountList")));
                    accountList.click();
                    WebElement signOut = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//span[text()='Sign Out']")));
                    signOut.click();

                    if (driver.getPageSource().contains("Sign in")) {
                        System.out.println("‚úÖ Logged out successfully");
                    }
                } catch (Exception e) {
                    System.out.println("‚ö†Ô∏è You were not logged in, so logout skipped.");
                }

            } else {
                System.out.println("‚ùå No products found in search results!");
            }

        } finally {
            // Close browser
            driver.quit();
        }
    }
}